{
	"info": {
		"_postman_id": "bec12406-3a0c-4f9a-85db-8894f47000c9",
		"name": "PDF Service",
		"description": "Endpoint targets to handle PDF operations. Splits, Merges and conversion should achieved by this service.\n\nThe PDF should already be uploaded and it's resource ID is used to perform the operations. The document service is used to that, and to retrieve the files.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20753034"
	},
	"item": [
		{
			"name": "Merge",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"source\": [\n    \"url-identifier-for-and-uploaded-pdf\",\n    \"url-identifier-for-and-uploaded-pdf2\",\n    \"url-identifier-for-and-uploaded-pdf3\",\n    \"url-identifier-for-and-uploaded-pdf4\"\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/merge",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"merge"
					]
				},
				"description": "Method used to combine multiple PDFs as pages into a single files. They'll retain the same order as provided in the array.\n\nIf the PDF has multiple pages, all of those will be imported."
			},
			"response": [
				{
					"name": "Successful response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"resources\": [\n    \"url-identifier-for-and-uploaded-pdf\",\n    \"url-identifier-for-and-uploaded-pdf2\",\n    \"url-identifier-for-and-uploaded-pdf3\",\n    \"url-identifier-for-and-uploaded-pdf4\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"merge"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"resources\" : [\n        \"url-identifier-for-and-uploaded-pdf\"\n    ]\n}"
				}
			]
		},
		{
			"name": "Split",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"config\" : {\n        \"pages\" : [\n            { \"offset\" : 2, \"limit\" : 2 }\n        ]\n    },\n    \"source\": \"url-identifier-for-and-uploaded-pdf\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/split",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"split"
					]
				},
				"description": "Method used to split one PDF document in multiple other PDFs documents. You must specify the PDF source for the split.\n\nThe parameter `config` is **optional**\n\nInside `config` you can specify the following attributes :\n\n*   `pages.0.offset` specifies where the page to be extracted start.\n*   `pages.0.limit` specifies how many pages after the offset, are going to be taken\n    \n\n**Note :** Multiples intervals can be defined, and multiple pages will be returned."
			},
			"response": [
				{
					"name": "Successful response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"source\": [\n    \"url-identifier-for-and-uploaded-pdf\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/split",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"split"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"resources\" : [\n        \"url-identifier-for-and-uploaded-pdf1\",\n        \"url-identifier-for-and-uploaded-pdf2\",\n        \"url-identifier-for-and-uploaded-pdf3\",\n        \"url-identifier-for-and-uploaded-pdf3\"\n    ]\n}"
				}
			]
		},
		{
			"name": "HTML to PDF",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"source\": [\n    \"base64-encoded-html\"\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/html2pdf",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"html2pdf"
					]
				},
				"description": "This method accepts and base64 encoded HTML and generated an PDF file based on the markup provided.\n\nUnder the hood, it uses the wkhtml2pdf library to achieve that."
			},
			"response": [
				{
					"name": "Successful response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"source\": [\n    \"base64-encoded-html\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/html2pdf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"html2pdf"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"resources\" : [\n        \"url-identifier-for-and-uploaded-pdf\"\n    ]\n}"
				}
			]
		},
		{
			"name": "PDF to PNG",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"source\": [\n    \"url-identifier-for-and-uploaded-pdf\"\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pdf2png",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pdf2png"
					]
				},
				"description": "This method generates and PNG based on a PDF file. If the PDF contain multiple pages, the service will generate 1 result per page."
			},
			"response": [
				{
					"name": "Successful response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"resources\": [\n    \"url-identifier-for-and-uploaded-pdf\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pdf2png",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pdf2png"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"resources\" : [\n        \"url-identifier-for-and-uploaded-pdf\"\n    ]\n}"
				}
			]
		},
		{
			"name": "Metadata",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/metadata/:resource-identifier",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"metadata",
						":resource-identifier"
					],
					"variable": [
						{
							"key": "resource-identifier",
							"value": "dolore ex",
							"description": "(Required) "
						}
					]
				},
				"description": "Returns useful information about the PDF, things like Author, File name, Size in bytes and Number of Pages."
			},
			"response": [
				{
					"name": "Successful response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metadata/:resource-identifier",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metadata",
								":resource-identifier"
							],
							"variable": [
								{
									"key": "resource-identifier",
									"value": "dolore ex",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"source\" : \"url-identifier-for-and-uploaded-pdf\",\n    \"metadata\" : {\n        \"name\" : \"filename.pdf\",\n        \"size\" : 10000,\n        \"pages\" : 3,\n        \"author\" : \"Author name\",\n        \"version\" : 1\n    }\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://{{host}}",
			"type": "string"
		}
	]
}